---
- name: "Install DRBD"
  hosts: all
  order: sorted
  become: yes 
  # debugger: on_failed
  
  vars:
    drbd_filemame_resource: r1
    drbd_host_node1: pcmk-1
    drbd_host_node2: pcmk-2
    drbd_IP_node1: 10.65.129.148
    drbd_IP_node2: 10.65.132.121
    drbd_backing_disk1: /dev/mapper/vg_root-drbd
    drbd_backing_disk2: /dev/vg_mq/lv_opt_mqm

  tasks:
    
    - name: Copy global common conf
      ansible.builtin.copy:
        src: global_common.conf
        dest: /etc/drbd.d/global_common.conf
        owner: root
        group: root
        mode: '0600'

  #- name: Copy r0
  #  ansible.builtin.copy:
  #    src: files/r0.res
  #    dest: /etc/drbd.d/r0.res
  #    owner: root
  #    group: root
  #    mode: '0600'

    - name: configure DRBD device
      template: src=r1.j2 dest=/etc/drbd.d/r1.res
      register: drbd0_config
      
    - name: Make sure device DRBD is down
      command: drbdadm down {{ drbd_filemame_resource }}
      ignore_errors: true

    # try loop task
    - name: Wipefs on disk
      ansible.builtin.command: wipefs -afq {{ drbd_backing_disk1 }}
      ignore_errors: true

    - name: Wipefs on disk
      ansible.builtin.command: wipefs -afq {{ drbd_backing_disk2 }}
      ignore_errors: true

    - name: Create ressource DRBD
      ansible.builtin.command: drbdadm create-md {{ drbd_filemame_resource }}

    - name: Initialize ressource DRBD
      ansible.builtin.command: drbdadm up {{ drbd_filemame_resource }}

    - name: Make one node primary
      ansible.builtin.command: drbdadm primary --force {{ drbd_filemame_resource }}
      when: ansible_hostname == 'lay6lnx0001.gdc.geodis.org'
  
    #- name: check status
    #  ansible.builtin.command: drbdadm status
    #    run once: true

    - name: wait for DRBD to become fully Connected
      run_once: true
      shell: "drbdadm cstate r0 | grep -v Connected"
      register: connected
      until: connected.rc != 0
      retries: 5
      delay: 10
      failed_when: "connected.rc !=0 and connected.rc !=1"
